openapi: 3.0.0

info:
  description: |
    You can find out more about Swagger at
    [http://swagger.io](http://swagger.io) or on
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  version: "2.0.0"
  title: "flow API: todos"
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

security:
  - Bearer: []

tags: []

paths:
  /:
    post:
      requestBody:
        $ref: "#/components/requestBodies/CreateTodo"
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        400:
          description: Invalid request
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

    delete:
      responses:
        204:
          description: Deleted
        500:
          description: Internal server error

    get:
      parameters:
        - $ref: "#/components/parameters/start"
        - $ref: "#/components/parameters/end"
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/with_completed"
        - $ref: "#/components/parameters/with_repeat_schedules"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/Todo"
                    - $ref: "#/components/schemas/RepeatSchedule"
        204:
          description: No content
        500:
          description: Internal server error

  /{id}:
    get:
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        404:
          description: Not found
        500:
          description: Internal server error

    patch:
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        $ref: "#/components/requestBodies/UpdateTodo"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
        400:
          description: Invalid request
        404:
          description: Not found
        415:
          description: Unsupported media type
        422:
          description: Unprocessable entity
        500:
          description: Internal server error

    delete:
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        204:
          description: Deleted
        404:
          description: Not found
        500:
          description: Internal server error

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          pattern: '^\d{2}:\d{2}$'
          example: "09:00"
        execution_time:
          type: integer
        sprint_id:
          type: integer
        project_id:
          type: integer
        completed:
          type: boolean
          default: false
        repeat:
          type: object
          properties:
            until:
              type: string
              format: date
            unit:
              type: string
              enum:
                - day
                - week
                - month
            every_other:
              type: integer
            days:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: integer
                    minimum: 0
                    maximum: 6
                  time:
                    type: string
                    pattern: '^\d{2}:\d{2}$'
                    example: "09:00"
    RepeatSchedule:
      type: object
      properties:
        original_id:
          type: integer
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          pattern: '^\d{2}:\d{2}$'
          example: "09:00"
        execution_time:
          type: integer
        sprint_id:
          type: integer
        project_id:
          type: integer
        completed:
          type: boolean
          default: false

    CreateTodoBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        time:
          type: string
          pattern: '^\d{2}:\d{2}$'
          example: "09:00"
        execution_time:
          type: integer
        sprint_id:
          type: integer
        project_id:
          type: integer
        repeat:
          type: object
          properties:
            until:
              type: string
              format: date
            unit:
              type: string
              enum:
                - day
                - week
                - month
              default: day
            every_other:
              type: integer
            days:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: integer
                    minimum: 0
                    maximum: 6
                  time:
                    type: string
                    pattern: '^\d{2}:\d{2}$'
                    example: "09:00"
      required:
        - name

    UpdateTodoBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        datetime:
          type: string
          format: date-time
        execution_time:
          type: integer
        sprint_id:
          type: integer
        project_id:
          type: integer
        completed:
          type: boolean
          default: false
        repeat:
          type: object
          properties:
            until:
              type: string
              format: date
            unit:
              type: string
              enum:
                - day
                - week
                - month
              default: day
            every_other:
              type: integer
            days:
              type: array
              items:
                type: object
                properties:
                  day:
                    type: integer
                    minimum: 0
                    maximum: 6
                  time:
                    type: string
                    pattern: '^\d{2}:\d{2}$'

    RepeatModel:
      type: object
      properties:
        until:
          type: string
          format: date
        unit:
          type: string
          enum:
            - day
            - week
            - month
        every_other:
          type: integer
        day:
          type: array
          items:
            type: object
            properties:
              day:
                type: integer
                minimum: 0
                maximum: 6
              time:
                type: string
                pattern: '^\d{2}:\d{2}$'

  requestBodies:
    CreateTodo:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTodoBody"

    UpdateTodo:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateTodoBody"

  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
    project_id:
      name: project_id
      in: query
      schema:
        type: integer
    start:
      name: start
      in: query
      schema:
        type: string
        format: date-time
    end:
      name: end
      in: query
      schema:
        type: string
        format: date-time
    with_completed:
      name: with_completed
      in: query
      schema:
        type: boolean
        default: false
    with_repeat_schedules:
      name: with_repeat_schedules
      in: query
      schema:
        type: boolean
        default: false

  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Credentials or access token for API
